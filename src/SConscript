import os, re, imp
import common_build as c

Import('env')

target = '#/bin/main'

# List of unit test files to prune away
unitTests = set(Glob('Test*.cpp') + Glob('*/Test*.cpp') + Glob('*/*/Test*.cpp'))
env.Append(CPPPATH  = c.sourcepaths)
env.Append(LIBPATH  = c.libpaths)
env.Append(CPPFLAGS = c.cppflags)
env.Append(CPPPATH  = c.sourcepaths)

######################
# SHARED EXTERNAL LIBRARY
#######################
externFiles = [list(set(Glob('extern/*.cpp') +
                        Glob('extern/*/*.cpp')) - unitTests)]
externLib = env.SharedLibrary('#/lib/swl-extern',
                              externFiles,
                              LIBS     = [],
                              LIBPATH  = []);
Default(externLib)


######################
# SHARED MATH LIBRARY
#######################
mathFiles = [list(set(Glob('math/*.cpp') +
                      Glob('math/*/*.cpp')) - unitTests)]
mathLib = env.SharedLibrary('#/lib/swl-math',
                            mathFiles,
                            LIBS    = [],
                            LIBPATH = []);
Default(mathLib)


######################
# SHARED UTIL LIBRARY
#######################
utilFiles = [list(set(Glob('util/*.cpp') +
                      Glob('util/*/*.cpp')) - unitTests)]
utilLib = env.SharedLibrary('#/lib/swl-util',
                            utilFiles,
                            LIBS = c.lSDL);
Default(utilLib)


######################
# SHARED AUDIO LIBRARY
#######################
audioFiles = [list(set(Glob('audio/*.cpp') +
                       Glob('audio/*/*.cpp')) - unitTests)]
audioLib = env.SharedLibrary('#/lib/swl-audio',
                             audioFiles,
                             LIBS = c.lSDL + c.lSDLmixer + mathLib + utilLib);
Default(audioLib)


######################
# SHARED GRAPHICS LIBRARY
#######################
graphicsFiles = [list(set(Glob('graphics/*.cpp') +
                          Glob('graphics/*/*.cpp')) - unitTests)]
graphicsLib = env.SharedLibrary('#/lib/swl-graphics',
                             graphicsFiles,
                             LIBS = mathLib + utilLib +
                                    c.lSDL + c.lSDLimage + c.lSDLttf +
                                    c.lGL);
Default(graphicsLib)


######################
# SHARED IO LIBRARY
#######################
ioFiles = [list(set(Glob('io/*.cpp') +
                    Glob('io/*/*.cpp')) - unitTests)]
ioLib = env.SharedLibrary('#/lib/swl-io',
                             ioFiles,
                             LIBS = utilLib + c.lSDL + mathLib);
Default(ioLib)


######################
# SHARED MODEL LIBRARY
#######################
modelFiles = [list(set(Glob('model/*.cpp') +
                       Glob('model/*/*.cpp')) - unitTests)]
modelLib = env.SharedLibrary('#/lib/swl-model',
                             modelFiles,
                             LIBS = mathLib + utilLib + c.lSDL + c.lBullet);
Default(modelLib)


######################
# SHARED CORE LIBRARY
#######################
coreFiles = [list(set(Glob('core/*.cpp') +
                       Glob('core/*/*.cpp')) - unitTests)]
coreLib = env.SharedLibrary('#/lib/swl-core',
                             coreFiles,
                             LIBS = mathLib + utilLib + externLib +
                                    audioLib + modelLib + ioLib + graphicsLib +
                                    c.lAll);
Default(coreLib)


######################
# Main Application
#######################
cppMain = Glob('main.cpp')
app = env.Program(target, cppMain,
                  LIBS = mathLib + utilLib + externLib +
                         audioLib + modelLib + ioLib + graphicsLib + coreLib +
                         c.lAll);
Default(app)
